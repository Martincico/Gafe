<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdAceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICMAAAAAAAAUCQAAFgAAACgAAAAgAAAARgAAAAEACAAAAAAA7AQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMwAAAGYAAACZAAAAzAAAAP8AAAAAMwAAMzMAAGYzAACZMwAAzDMAAP8zAAAAZgAAM2YAAGZm
        AACZZgAAzGYAAP9mAAAAmQAAM5kAAGaZAACZmQAAzJkAAP+ZAAAAzAAAM8wAAGbMAACZzAAAzMwAAP/M
        AAAA/wAAM/8AAGb/AACZ/wAAzP8AAP//AAAAADMAMwAzAGYAMwCZADMAzAAzAP8AMwAAMzMAMzMzAGYz
        MwCZMzMAzDMzAP8zMwAAZjMAM2YzAGZmMwCZZjMAzGYzAP9mMwAAmTMAM5kzAGaZMwCZmTMAzJkzAP+Z
        MwAAzDMAM8wzAGbMMwCZzDMAzMwzAP/MMwAA/zMAM/8zAGb/MwCZ/zMAzP8zAP//MwAAAGYAMwBmAGYA
        ZgCZAGYAzABmAP8AZgAAM2YAMzNmAGYzZgCZM2YAzDNmAP8zZgAAZmYAM2ZmAGZmZgCZZmYAzGZmAP9m
        ZgAAmWYAM5lmAGaZZgCZmWYAzJlmAP+ZZgAAzGYAM8xmAGbMZgCZzGYAzMxmAP/MZgAA/2YAM/9mAGb/
        ZgCZ/2YAzP9mAP//ZgAAAJkAMwCZAGYAmQCZAJkAzACZAP8AmQAAM5kAMzOZAGYzmQCZM5kAzDOZAP8z
        mQAAZpkAM2aZAGZmmQCZZpkAzGaZAP9mmQAAmZkAM5mZAGaZmQCZmZkAzJmZAP+ZmQAAzJkAM8yZAGbM
        mQCZzJkAzMyZAP/MmQAA/5kAM/+ZAGb/mQCZ/5kAzP+ZAP//mQAAAMwAMwDMAGYAzACZAMwAzADMAP8A
        zAAAM8wAMzPMAGYzzACZM8wAzDPMAP8zzAAAZswAM2bMAGZmzACZZswAzGbMAP9mzAAAmcwAM5nMAGaZ
        zACZmcwAzJnMAP+ZzAAAzMwAM8zMAGbMzACZzMwAzMzMAP/MzAAA/8wAM//MAGb/zACZ/8wAzP/MAP//
        zAAAAP8AMwD/AGYA/wCZAP8AzAD/AP8A/wAAM/8AMzP/AGYz/wCZM/8AzDP/AP8z/wAAZv8AM2b/AGZm
        /wCZZv8AzGb/AP9m/wAAmf8AM5n/AGaZ/wCZmf8AzJn/AP+Z/wAAzP8AM8z/AGbM/wCZzP8AzMz/AP/M
        /wAA//8AM///AGb//wCZ//8AzP//AP///wAAAAAADQ0NABoaGgAoKCgANTU1AENDQwBQUFAAXV1dAGtr
        awB4eHgAhoaGAJOTkwChoaEArq6uALu7uwDJyckA1tbWAOTk5ADx8fEA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA19fX19fX19fX19fX19esVqzX19fX19fX19fX19fX19fX19fX19fX19fXrKxWVlZWVoHX19fX
        19fX19fX19fX19fX19fX19fXrIFWVlZWgYHX19fX19fX19fX19fX19fX19fX19esgVZWVlZWgazX16yC
        MzOC19fX19fX19fX19fX19esgVZWVoGBrNfXs4gzMwkPCDNd19fX19fX19fX19fXrFZWVlasrNesiDMP
        CA8IDwgPCA8zs9fX19fX19fX19eBVoGs19esMzMJDwgzCQ8IMwkPCDMPrNfX19fX19fXrFZWrNddDwgP
        CA8IDwgPCA8IDwgPCA8IXtfX19fX19eBVoHXXg8IMw9erTMPDwgzDzMIMw8zCDMPXa3X19fX14FWrKwP
        CA8ID13XMw8IDwgPCA8ID4gzCA8IM4jX19fXVlasswgzCQ8IgtczCDMJDwgzCA8I17MzCDMID17X19dW
        VqysDwgPCA9d1zMPCA8IDwgPCA+C19deCA8ID13X11ZWrLMPMwgzCYjXXg8zCDMJDwgzDzNd19esDzMP
        M62sVlbXiA8IDwhd19esDwgPCA8IDwgPCA8zs9ezDw8IiNdWVtetCDMJD4jX19czMwkPCDMJDwgzCQ8P
        rdfXXTOCrFZW14gPCA8IrdfX114IDwgPCA8IM10PCA8IgtfXgojXVlbXrQ8PCDNe19fXMw8IMw8zCDMz
        14gzDzMIXtfX14FWVteCDwgPCA9drDMPCA8IDwgPCDOt16wzCA8IM6zXrFaB14gIMwkPCDMIDwgzCQ8I
        MwgPCDOs17NeCA8IM4iBVlbXgg8IDwgPCA8IDwgPCA8IDwgPCA+C19eCCA8IM6xWgdetDzMIMwkPCDMz
        XqzXrV4IMw8zCDNd19ezDzMzVlZW16wPCA8IDzOCiNfX16zX16wIDwgPCA8zs9ezMzOBVlas16xeXYis
        19fXrKxWVlas19czMwkPCDMPrdfXglZWVlas19fX19esgVZWVlZWVlaB19czDwgPCA8IgtfXgVZWVoGB
        rIGBVlZWVlZWVlZWVlaB19eCMw8zCDMPXrNWVlZWVlZWVlZWVlZWVlZWVlZWVlZWrNeIMwgPCA8IM4FW
        VlZWVlZWVlZWVlZWVlZWVlZWVlZWrNesXggPCDMJrFZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWgdetXggP
        CA/XgVZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWgdfXXg8zCNfXgVZWVlZWVlZWVlZWVlZWVlZWVlZWrKzX
        rYgIDwgz19fXrIFWVlZWVlZWVlZWVlZWVoGsrNeziDMzCQ8IM6zX19fXrIFWVlZWVlZWVlZWgays16yI
        Mw8IDwgPM4is19fX19fX16xWVlZWVoGBrNfXrYgzMw8PCDNdrdfX19fX19fX19fX19esrKzXrNfX1zMP
        CA8IM12trNfX19fX19fX19fX19fX19fX19fX19fX1zM5XrPX19fX19fX19fX1wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>